{"version":3,"file":"Leaflet.Bookmarks.min.js","sources":["../src/string.js","../src/storage/global.js","../src/storage/localstorage.js","../src/storage.js","../src/formpopup.js","../src/leaflet.delegate.js","../src/bookmarks.js","../index.js"],"sourcesContent":["/**\n * Substitutes {{ obj.field }} in strings\n *\n * @param  {String}  str\n * @param  {Object}  object\n * @param  {RegExp=} regexp\n * @return {String}\n */\nexport function substitute(str, object, regexp) {\n  return str.replace(regexp || (/{{([\\s\\S]+?)}}/g), function(match, name) {\n    name = trim(name);\n\n    if (name.indexOf('.') === -1) {\n      if (match.charAt(0) == '\\\\') return match.slice(1);\n      return (object[name] != null) ? object[name] : '';\n\n    } else { // nested\n      let result = object;\n      name = name.split('.');\n      for (var i = 0, len = name.length; i < len; i++) {\n        if (name[i] in result) result = result[name[i]];\n        else return '';\n      }\n      return result;\n    }\n  });\n}\n\nconst alpha = 'abcdefghijklmnopqrstuvwxyz';\n/**\n * Unique string from date. Puts character at the beginning,\n * for the sake of good manners\n *\n * @return {String}\n */\nexport function unique(prefix) {\n  return (prefix || alpha[Math.floor(Math.random() * alpha.length)]) +\n    (new Date()).getTime().toString(16);\n}\n\n/**\n * Trim whitespace\n * @param  {String} str\n * @return {String}\n */\nexport function trim(str) {\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Clean and trim\n * @param  {String} str\n * @return {String}\n */\nexport function clean(str) {\n  return trim(str.replace(/\\s+/g, ' '));\n}\n","/**\n * @type {Object}\n */\nconst data = {};\n\n/**\n * Object based storage\n * @class Storage.Engine.Global\n * @constructor\n */\nexport default class GlobalStorage {\n  constructor (prefix) {\n\n    /**\n     * @type {String}\n     */\n    this._prefix = prefix;\n  }\n\n  /**\n   * @param  {String}   key\n   * @param  {Function} callback\n   */\n  getItem (key, callback) {\n    callback(data[this._prefix + key]);\n  }\n\n  /**\n   * @param {String}   key\n   * @param {*}        item\n   * @param {Function} callback\n   */\n  setItem (key, item, callback) {\n    data[this._prefix + key] = item;\n    callback(item);\n  }\n\n  /**\n   * @param  {Function} callback\n   */\n  getAllItems (callback) {\n    const items = [];\n    for (const key in data) {\n      if (data.hasOwnProperty(key) && key.indexOf(this_prefix) === 0) {\n        items.push(data[key]);\n      }\n    }\n    callback(items);\n  }\n\n  /**\n   * @param  {String}   key\n   * @param  {Function} callback\n   */\n  removeItem (key, callback) {\n    this.getItem(key, (item) => {\n      if (item) {\n        delete data[this._prefix + key];\n      } else {\n        item = null;\n      }\n      if (callback) callback(item);\n    });\n  }\n}\n","/**\n * @const\n * @type {RegExp}\n */\nconst JSON_RE = /^[\\{\\[](.)*[\\]\\}]$/;\n\n/**\n * LocalStoarge based storage\n */\nexport default class LocalStorage {\n\n  constructor (prefix) {\n    /**\n     * @type {String}\n     */\n    this._prefix = prefix;\n\n    /**\n     * @type {LocalStorage}\n     */\n    this._storage = window.localStorage;\n  }\n\n  /**\n   * @param  {String}   key\n   * @param  {Function} callback\n   */\n  getItem (key, callback) {\n    let item = this._storage.getItem(this._prefix + key);\n    if (item && JSON_RE.test(item)) {\n      item = JSON.parse(item);\n    }\n    callback(item);\n  }\n\n  /**\n   * @param  {Function} callback\n   */\n  getAllItems (callback) {\n    const items = [];\n    const prefixLength = this._prefix.length;\n    for (const key in this._storage) {\n      if (this._storage.getItem(key) !== null &&\n        key.indexOf(this._prefix) === 0) {\n        this.getItem(key.substring(prefixLength), (item) => items.push(item));\n      }\n    }\n    callback(items);\n  }\n\n  /**\n   * @param  {String}   key\n   * @param  {Function} callback\n   */\n  removeItem (key, callback) {\n    const self = this;\n    this.getItem(key, (item) => {\n      this._storage.removeItem(self._prefix + key);\n      if (callback) callback(item);\n    });\n  }\n\n  /**\n   * @param  {String}   key\n   * @param  {*}        item\n   * @param  {Function} callback\n   */\n  setItem (key, item, callback) {\n    let itemStr = item.toString();\n    if (itemStr === '[object Object]') {\n      itemStr = JSON.stringify(item)\n    }\n    this._storage.setItem(this._prefix + key, itemStr);\n    callback(item);\n  }\n}\n","import { unique } from './string';\n\nimport XHR from './storage/xhr';\nimport GlobalStorage from './storage/global';\nimport LocalStorage from './storage/localstorage';\n\n/**\n * @const\n * @enum {Number}\n */\nexport const EngineType = {\n  // XHR: 1, // we don't have it included\n  GLOBALSTORAGE: 2,\n  LOCALSTORAGE: 3\n};\n\n/**\n * Persistent storage, depends on engine choice: localStorage/ajax\n * @param {String} name\n */\nexport default class Storage {\n\n  constructor(name, engineType) {\n\n    if (typeof name !== 'string') {\n      engineType = name;\n      name = unique();\n    }\n\n    /**\n     * @type {String}\n     */\n    this._name = name;\n\n    /**\n     * @type {Storage.Engine}\n     */\n    this._engine = Storage.createEngine(engineType,\n      this._name, Array.prototype.slice.call(arguments, 2));\n  }\n\n  /**\n   * Engine factory\n   * @param  {Number} type\n   * @param  {String} prefix\n   * @return {Storage.Engine}\n   */\n  static createEngine (type, prefix, args) {\n    if (type === EngineType.GLOBALSTORAGE) {\n      return new GlobalStorage(prefix);\n    }\n    if (type === EngineType.LOCALSTORAGE) {\n      return new LocalStorage(prefix);\n    }\n  }\n\n  /**\n   * @param {String}   key\n   * @param {*}        item\n   * @param {Function} callback\n   */\n  setItem (key, item, callback) {\n    this._engine.setItem(key, item, callback);\n    return this;\n  }\n\n  /**\n   * @param  {String}   key\n   * @param  {Function} callback\n   */\n  getItem (key, callback) {\n    this._engine.getItem(key, callback);\n    return this;\n  }\n\n  /**\n   * @param  {Function} callback\n   */\n  getAllItems (callback) {\n    this._engine.getAllItems(callback);\n  }\n\n  /**\n   * @param  {String}   key\n   * @param  {Function} callback\n   */\n  removeItem (key, callback) {\n    this._engine.removeItem(key, callback);\n  }\n}\n\n","import L from 'leaflet';\nimport { unique, substitute } from './string';\n\nconst modes = {\n  CREATE: 1,\n  UPDATE: 2,\n  SHOW: 3,\n  OPTIONS: 4\n};\n\n/**\n * New bookmark form popup\n *\n * @class  FormPopup\n * @extends {L.Popup}\n */\nexport default L.Popup.extend( /** @lends FormPopup.prototype */ {\n\n  statics: {\n    modes: modes\n  },\n\n  /**\n   * @type {Object}\n   */\n  options: {\n    mode: modes.CREATE,\n    className: 'leaflet-bookmarks-form-popup',\n    templateOptions: {\n      formClass: 'leaflet-bookmarks-form',\n      inputClass: 'leaflet-bookmarks-form-input',\n      inputErrorClass: 'has-error',\n      idInputClass: 'leaflet-bookmarks-form-id',\n      coordsClass: 'leaflet-bookmarks-form-coords',\n      submitClass: 'leaflet-bookmarks-form-submit',\n      inputPlaceholder: 'Bookmark name',\n      removeClass: 'leaflet-bookmarks-form-remove',\n      editClass: 'leaflet-bookmarks-form-edit',\n      cancelClass: 'leaflet-bookmarks-form-cancel',\n      editableClass: 'editable',\n      removableClass: 'removable',\n      menuItemClass: 'nav-item',\n      editMenuText: 'Edit',\n      removeMenuText: 'Remove',\n      cancelMenuText: 'Cancel',\n      submitTextCreate: '+',\n      submitTextEdit: '<span class=\"icon-checkmark\"></span>'\n    },\n    generateNames: false,\n    minWidth: 160,\n    generateNamesPrefix: 'Bookmark ',\n    template: '<form class=\"{{ formClass }}\">' +\n      '<div class=\"input-group\"><input type=\"text\" name=\"bookmark-name\" ' +\n      'placeholder=\"{{ inputPlaceholder }}\" class=\"form-control {{ inputClass }}\" value=\"{{ name }}\">' +\n      '<input type=\"hidden\" class={{ idInputClass }} value=\"{{ id }}\">' +\n      '<button type=\"submit\" class=\"input-group-addon {{ submitClass }}\">' +\n      '{{ submitText }}</button></div>' +\n      '<div class=\"{{ coordsClass }}\">{{ coords }}</div>' +\n      '</form>',\n    menuTemplate: '<ul class=\"nav {{ mode }}\" role=\"menu\">' +\n      '<li class=\"{{ editClass }}\"><a href=\"#\" class=\"{{ menuItemClass }}\">{{ editMenuText }}</a></li>' +\n      '<li class=\"{{ removeClass }}\"><a href=\"#\" class=\"{{ menuItemClass }}\">{{ removeMenuText }}</a></li>' +\n      '<li><a href=\"#\" class=\"{{ menuItemClass }} {{ cancelClass }}\">{{ cancelMenuText }}</a></li>' +\n      '</ul>'\n  },\n\n  /**\n   * @param  {Object}  options\n   * @param  {L.Layer} source\n   * @param  {Object=} bookmark\n   *\n   * @constructor\n   */\n  initialize: function(options, source, control, bookmark) {\n    options.offset = this._calculateOffset(source, {});\n\n    /**\n     * @type {Object}\n     */\n    this._bookmark = bookmark;\n\n    /**\n     * @type {L.Control.Bookmarks}\n     */\n    this._control = control;\n\n    /**\n     * @type {L.LatLng}\n     */\n    this._latlng = source.getLatLng();\n\n    /**\n     * For dragging purposes we're not maintaining the usual\n     * link between the marker and Popup, otherwise it will simply be destroyed\n     */\n    source._popup_ = this;\n\n    L.Popup.prototype.initialize.call(this, options, source);\n  },\n\n  /**\n   * Add menu button\n   */\n  _initLayout: function() {\n    L.Popup.prototype._initLayout.call(this);\n\n    if (this.options.mode === modes.SHOW &&\n      (this._bookmark.editable || this._bookmark.removable)) {\n\n      const menuButton = this._menuButton =\n        L.DomUtil.create('a', 'leaflet-popup-menu-button');\n      this._container.insertBefore(menuButton, this._closeButton);\n      menuButton.href = '#menu';\n      menuButton.innerHTML = '<span class=\"menu-icon\"></span>';\n      L.DomEvent.disableClickPropagation(menuButton);\n      L.DomEvent.on(menuButton, 'click', this._onMenuButtonClick, this);\n    }\n  },\n\n  /**\n   * Show options menu\n   */\n  _showMenu: function() {\n    this._map.fire('bookmark:options', { data: this._bookmark });\n  },\n\n  /**\n   * @param  {MouseEvent} evt\n   */\n  _onMenuButtonClick: function(evt) {\n    L.DomEvent.preventDefault(evt);\n    this._showMenu();\n    this._close();\n  },\n\n  /**\n   * Correct offset from marker\n   * @param  {L.Marker} source\n   * @param  {Object}   options\n   * @return {L.Point}\n   */\n  _calculateOffset: function(source, options) {\n    let anchor = L.point(source.options.icon.options.popupAnchor || [0, 0]);\n    anchor = anchor.add(this.options.offset);\n\n    if (options && options.offset) anchor = anchor.add(options.offset);\n\n    return anchor;\n  },\n\n  /**\n   * Renders template only\n   * @override\n   */\n  _updateContent: function() {\n    let content;\n    if (this.options.mode === modes.SHOW) {\n      content = this._control._getPopupContent(this._bookmark);\n    } else {\n      let template = this.options.template;\n      let submitText = this.options.templateOptions.submitTextCreate;\n      if (this.options.mode === modes.OPTIONS) {\n        template = this.options.menuTemplate;\n      }\n      if (this.options.mode === modes.UPDATE) {\n        submitText = this.options.templateOptions.submitTextEdit;\n      }\n      const modeClass = [];\n      if (this._bookmark.editable) {\n        modeClass.push(this.options.templateOptions.editableClass);\n      }\n      if (this._bookmark.removable) {\n        modeClass.push(this.options.templateOptions.removableClass);\n      }\n      content = substitute(template,\n        L.Util.extend({}, this._bookmark || {}, this.options.templateOptions, {\n          submitText: submitText,\n          coords: this.formatCoords(\n            this._source.getLatLng(),\n            this._map.getZoom()\n          ),\n          mode: modeClass.join(' ')\n        }));\n    }\n    this._content = content;\n    L.Popup.prototype._updateContent.call(this);\n    this._onRendered();\n  },\n\n  /**\n   * Form rendered, set up create or edit\n   */\n  _onRendered: function() {\n    if (\n      this.options.mode === modes.CREATE ||\n      this.options.mode === modes.UPDATE\n    ) {\n      const form = this._contentNode.querySelector('.' +\n        this.options.templateOptions.formClass);\n      const input = form.querySelector('.' +\n        this.options.templateOptions.inputClass);\n\n      L.DomEvent.on(form, 'submit', this._onSubmit, this);\n      setTimeout(this._setFocus.bind(this), 250);\n    } else if (this.options.mode === modes.OPTIONS) {\n      L.DomEvent.delegate(this._container,\n        '.' + this.options.templateOptions.editClass,\n        'click', this._onEditClick, this);\n      L.DomEvent.delegate(this._container,\n        '.' + this.options.templateOptions.removeClass,\n        'click', this._onRemoveClick, this);\n      L.DomEvent.delegate(this._container,\n        '.' + this.options.templateOptions.cancelClass,\n        'click', this._onCancelClick, this);\n    }\n  },\n\n  /**\n   * Set focus at the end of input\n   */\n  _setFocus: function() {\n    const input = this._contentNode.querySelector('.' +\n      this.options.templateOptions.inputClass);\n    // Multiply by 2 to ensure the cursor always ends up at the end;\n    // Opera sometimes sees a carriage return as 2 characters.\n    const strLength = input.value.length * 2;\n    input.focus();\n    input.setSelectionRange(strLength, strLength);\n  },\n\n  /**\n   * Edit button clicked\n   * @param  {Event} evt\n   */\n  _onEditClick: function(evt) {\n    L.DomEvent.preventDefault(evt);\n    this._map.fire('bookmark:edit', { data: this._bookmark });\n    this._close();\n  },\n\n  /**\n   * Remove button clicked\n   * @param  {Event} evt\n   */\n  _onRemoveClick: function(evt) {\n    L.DomEvent.preventDefault(evt);\n    this._map.fire('bookmark:remove', { data: this._bookmark });\n    this._close();\n  },\n\n  /**\n   * Back from options view\n   * @param  {Event} evt\n   */\n  _onCancelClick: function(evt) {\n    L.DomEvent.preventDefault(evt);\n    this._map.fire('bookmark:show', { data: this._bookmark });\n    this._close();\n  },\n\n  /**\n   * Creates bookmark object from form data\n   * @return {Object}\n   */\n  _getBookmarkData: function() {\n    if (this.options.getBookmarkData) {\n      return this.options.getBookmarkData.call(this);\n    }\n    const input = this._contentNode.querySelector('.' +\n      this.options.templateOptions.inputClass);\n    const idInput = this._contentNode.querySelector('.' +\n      this.options.templateOptions.idInputClass);\n    return {\n      latlng: this._source.getLatLng(),\n      zoom: this._map.getZoom(),\n      name: input.value,\n      id: idInput.value || unique()\n    };\n  },\n\n  /**\n   * Form submit, dispatch eventm close popup\n   * @param {Event} evt\n   */\n  _onSubmit: function(evt) {\n    L.DomEvent.stop(evt);\n\n    const input = this._contentNode.querySelector('.' +\n      this.options.templateOptions.inputClass);\n    input.classList.remove(this.options.templateOptions.inputErrorClass);\n\n    if (input.value === '' && this.options.generateNames) {\n      input.value = unique(this.options.generateNamesPrefix);\n    }\n\n    const validate = this.options.validateInput || (() => true);\n\n    if (input.value !== '' && validate.call(this, input.value)) {\n      const bookmark = L.Util.extend({}, this._bookmark, this._getBookmarkData());\n      const map = this._map;\n\n      this._close();\n      if (this.options.mode === modes.CREATE) {\n        map.fire('bookmark:add', { data: bookmark });\n      } else {\n        map.fire('bookmark:edited', { data: bookmark });\n      }\n    } else {\n      input.classList.add(this.options.templateOptions.inputErrorClass);\n    }\n  },\n\n  /**\n   * @param  {L.LatLng} coords\n   * @param  {Number=}  zoom\n   * @return {String}\n   */\n  formatCoords: function(coords, zoom) {\n    if (this.options.formatCoords) {\n      return this.options.formatCoords.call(this, coords, zoom);\n    }\n    return [coords.lat.toFixed(4), coords.lng.toFixed(4), zoom]\n      .join(',&nbsp;');\n  },\n\n  /**\n   * Hook to source movements\n   * @param  {L.Map} map\n   * @return {Element}\n   */\n  onAdd: function(map) {\n    this._source.on('dragend', this._onSourceMoved, this);\n    this._source.on('dragstart', this._onSourceMoveStart, this);\n    return L.Popup.prototype.onAdd.call(this, map);\n  },\n\n  /**\n   * @param  {L.Map} map\n   */\n  onRemove: function(map) {\n    this._source.off('dragend', this._onSourceMoved, this);\n    L.Popup.prototype.onRemove.call(this, map);\n  },\n\n  /**\n   * Marker drag\n   */\n  _onSourceMoveStart: function() {\n    // store\n    this._bookmark = L.Util.extend(this._bookmark || {}, this._getBookmarkData());\n    this._container.style.display = 'none';\n  },\n\n  /**\n   * Marker moved\n   * @param  {Event} e\n   */\n  _onSourceMoved: function(e) {\n    this._latlng = this._source.getLatLng();\n    this._container.style.display = '';\n    this._source.openPopup();\n    this.update();\n  }\n});\n","import L from 'leaflet';\n\n/**\n * Courtesy of https://github.com/component/matches-selector\n */\nconst matchesSelector = ((ElementPrototype) => {\n  const matches = ElementPrototype.matches ||\n    ElementPrototype.webkitMatchesSelector ||\n    ElementPrototype.mozMatchesSelector ||\n    ElementPrototype.msMatchesSelector ||\n    ElementPrototype.oMatchesSelector ||\n    // hello IE\n    function(selector) {\n      var node = this,\n        parent = (node.parentNode || node.document),\n        nodes = parent.querySelectorAll(selector);\n\n      for (var i = 0, len = nodes.length; i < len; ++i) {\n        if (nodes[i] == node) return true;\n      }\n      return false;\n    };\n\n  /**\n   * @param  {Element} element\n   * @param  {String} selector\n   * @return {Boolean}\n   */\n  return function(element, selector) {\n    return matches.call(element, selector);\n  };\n})(Element.prototype);\n\n/**\n * Courtesy of https://github.com/component/closest\n *\n * @param  {Element} element\n * @param  {String}  selector\n * @param  {Boolean} checkSelf\n * @param  {Element} root\n *\n * @return {Element|Null}\n */\nfunction closest(element, selector, checkSelf, root) {\n  element = checkSelf ? {\n    parentNode: element\n  } : element\n\n  root = root || document;\n\n  // Make sure `element !== document` and `element != null`\n  // otherwise we get an illegal invocation\n  while ((element = element.parentNode) && element !== document) {\n    if (matchesSelector(element, selector)) return element\n    // After `matches` on the edge case that\n    // the selector matches the root\n    // (when the root is not the document)\n    if (element === root) return null;\n  }\n}\n\n/**\n * Based on https://github.com/component/delegate\n *\n * @param  {Element}  el\n * @param  {String}   selector\n * @param  {String}   type\n * @param  {Function} fn\n *\n * @return {Function}\n */\nL.DomEvent.delegate = function(el, selector, type, fn, bind) {\n  return L.DomEvent.on(el, type, (evt) => {\n    const target = evt.target || evt.srcElement;\n    evt.delegateTarget = closest(target, selector, true, el);\n    if (evt.delegateTarget && !evt.propagationStopped) {\n      fn.call(bind || el, evt);\n    }\n  });\n};\n","import L from 'leaflet';\nimport Storage, { EngineType } from './storage';\nimport FormPopup from './formpopup';\nimport { substitute } from './string';\nimport './leaflet.delegate';\n\n// expose\nL.Util._template = L.Util._template || substitute;\n\n/**\n * Bookmarks control\n * @class  L.Control.Bookmarks\n * @extends {L.Control}\n */\nexport default L.Control.extend( /**  @lends Bookmarks.prototype */ {\n\n  statics: {\n    Storage,\n    FormPopup\n  },\n\n  /**\n   * @type {Object}\n   */\n  options: {\n    localStorage: true,\n\n    /* you can provide access to your own storage,\n     * xhr for example, but make sure it has all\n     * required endpoints:\n     *\n     * .getItem(id, callback)\n     * .setItem(id, callback)\n     * .getAllItems(callback)\n     * .removeItem(id, callback)\n     */\n    storage: null,\n    name: 'leaflet-bookmarks',\n    position: 'topright', // chose your own if you want\n\n    containerClass: 'leaflet-bar leaflet-bookmarks-control',\n    expandedClass: 'expanded',\n    headerClass: 'bookmarks-header',\n    listClass: 'bookmarks-list',\n    iconClass: 'bookmarks-icon',\n    iconWrapperClass: 'bookmarks-icon-wrapper',\n    listWrapperClass: 'bookmarks-list-wrapper',\n    listWrapperClassAdd: 'list-with-button',\n    wrapperClass: 'bookmarks-container',\n    addBookmarkButtonCss: 'add-bookmark-button',\n\n    animateClass: 'bookmark-added-anim',\n    animateDuration: 150,\n\n    formPopup: {\n      popupClass: 'bookmarks-popup'\n    },\n\n    bookmarkTemplate: '<li class=\"{{ itemClass }}\" data-id=\"{{ data.id }}\">' +\n      '<span class=\"{{ removeClass }}\">&times;</span>' +\n      '<span class=\"{{ nameClass }}\">{{ data.name }}</span>' +\n      '<span class=\"{{ coordsClass }}\">{{ data.coords }}</span>' +\n      '</li>',\n\n    emptyTemplate: '<li class=\"{{ itemClass }} {{ emptyClass }}\">' +\n      '{{ data.emptyMessage }}</li>',\n\n    dividerTemplate: '<li class=\"divider\"></li>',\n\n    bookmarkTemplateOptions: {\n      itemClass: 'bookmark-item',\n      nameClass: 'bookmark-name',\n      coordsClass: 'bookmark-coords',\n      removeClass: 'bookmark-remove',\n      emptyClass: 'bookmarks-empty'\n    },\n\n    defaultBookmarkOptions: {\n      editable: true,\n      removable: true\n    },\n\n    title: 'Bookmarks',\n    emptyMessage: 'No bookmarks yet',\n    addBookmarkMessage: 'Add new bookmark',\n    collapseOnClick: true,\n    scrollOnAdd: true,\n    scrollDuration: 1000,\n    popupOnShow: true,\n    addNewOption: true,\n\n    /**\n     * This you can change easily to output\n     * whatever you have stored in bookmark\n     *\n     * @type {String}\n     */\n    popupTemplate: '<div><h3>{{ name }}</h3><p>{{ latlng }}, {{ zoom }}</p></div>',\n\n    /**\n     * Prepare your bookmark data for template.\n     * If you don't change it, the context of this\n     * function will be bookmarks control, so you can\n     * access the map or other things from here\n     *\n     * @param  {Object} bookmark\n     * @return {Object}\n     */\n    getPopupContent: function(bookmark) {\n      return substitute(this.options.popupTemplate, {\n        latlng: this.formatCoords(bookmark.latlng),\n        name: bookmark.name,\n        zoom: this._map.getZoom()\n      });\n    }\n  },\n\n  /**\n   * @param  {Object} options\n   * @constructor\n   */\n  initialize: function(options) {\n\n    options = options || {};\n\n    /**\n     * Bookmarks array\n     * @type {Array}\n     */\n    this._data = [];\n\n    /**\n     * @type {Element}\n     */\n    this._list = null;\n\n    /**\n     * @type {L.Marker}\n     */\n    this._marker = null;\n\n    /**\n     * @type {HTMLElement}\n     */\n    this._addButton = null;\n\n    /**\n     * @type {Element}\n     */\n    this._icon = null;\n\n    /**\n     * @type {Boolean}\n     */\n    this._isCollapsed = true;\n\n    L.Util.setOptions(this, options);\n\n    /**\n     * @type {Storage}\n     */\n    this._storage = options.storage ||\n      (this.options.localStorage ?\n        new Storage(this.options.name, EngineType.LOCALSTORAGE) :\n        new Storage(this.options.name, EngineType.GLOBALSTORAGE));\n\n    L.Control.prototype.initialize.call(this, this.options);\n  },\n\n  /**\n   * @param {L.Map} map\n   */\n  onAdd: function(map) {\n    const container = this._container = L.DomUtil.create('div',\n      this.options.containerClass\n    );\n\n    L.DomEvent\n      .disableClickPropagation(container)\n      .disableScrollPropagation(container);\n    container.innerHTML = '<div class=\"' + this.options.headerClass +\n      '\"><span class=\"' + this.options.iconWrapperClass + '\">' +\n      '<span class=\"' + this.options.iconClass + '\"></span></span>';\n\n    this._icon = container.querySelector('.' + this.options.iconClass);\n    this._icon.title = this.options.title;\n\n    this._createList(this.options.bookmarks);\n\n    const wrapper = L.DomUtil.create('div',\n      this.options.wrapperClass, this._container);\n    wrapper.appendChild(this._listwrapper);\n\n    this._initLayout();\n\n    L.DomEvent\n      .on(container, 'click', this._onClick, this)\n      .on(container, 'contextmenu', L.DomEvent.stopPropagation);\n\n    map\n      .on('bookmark:new', this._onBookmarkAddStart, this)\n      .on('bookmark:add', this._onBookmarkAdd, this)\n      .on('bookmark:edited', this._onBookmarkEdited, this)\n      .on('bookmark:show', this._onBookmarkShow, this)\n      .on('bookmark:edit', this._onBookmarkEdit, this)\n      .on('bookmark:options', this._onBookmarkOptions, this)\n      .on('bookmark:remove', this._onBookmarkRemove, this)\n      .on('resize', this._initLayout, this);\n\n    return container;\n  },\n\n  /**\n   * @param  {L.Map} map\n   */\n  onRemove: function(map) {\n    map\n      .off('bookmark:new', this._onBookmarkAddStart, this)\n      .off('bookmark:add', this._onBookmarkAdd, this)\n      .off('bookmark:edited', this._onBookmarkEdited, this)\n      .off('bookmark:show', this._onBookmarkShow, this)\n      .off('bookmark:edit', this._onBookmarkEdit, this)\n      .off('bookmark:options', this._onBookmarkOptions, this)\n      .off('bookmark:remove', this._onBookmarkRemove, this)\n      .off('resize', this._initLayout, this);\n\n    if (this._marker) this._marker._popup_._close();\n\n    if (this.options.addNewOption) {\n      L.DomEvent.off(this._container.querySelector('.' +\n          this.options.addBookmarkButtonCss), 'click',\n        this._onAddButtonPressed, this);\n    }\n\n    this._marker = null;\n    this._popup = null;\n    this._container = null;\n  },\n\n  /**\n   * @return {Array.<Object>}\n   */\n  getData: function() {\n    return this._filterBookmarksOutput(this._data);\n  },\n\n  /**\n   * @param  {Array.<Number>|Function|null} bookmarks\n   */\n  _createList: function(bookmarks) {\n    this._listwrapper = L.DomUtil.create(\n      'div', this.options.listWrapperClass, this._container);\n    this._list = L.DomUtil.create(\n      'ul', this.options.listClass, this._listwrapper);\n\n    // select bookmark\n    L.DomEvent.delegate(\n      this._list,\n      '.' + this.options.bookmarkTemplateOptions.itemClass,\n      'click',\n      this._onBookmarkClick,\n      this\n    );\n\n    this._setEmptyListContent();\n\n    if (L.Util.isArray(bookmarks)) {\n      this._appendItems(bookmarks);\n    } else if (typeof bookmarks === 'function') {\n      this._appendItems(bookmarks());\n    } else {\n      this._storage.getAllItems((bookmarks) => this._appendItems(bookmarks));\n    }\n  },\n\n  /**\n   * Empty list\n   */\n  _setEmptyListContent: function() {\n    this._list.innerHTML = substitute(this.options.emptyTemplate,\n      L.Util.extend(this.options.bookmarkTemplateOptions, {\n        data: {\n          emptyMessage: this.options.emptyMessage\n        }\n      }));\n  },\n\n  /**\n   * Sees that the list size is not too big\n   */\n  _initLayout: function() {\n    const size = this._map.getSize();\n    this._listwrapper.style.maxHeight =\n      Math.min(size.y * 0.6, size.y - 100) + 'px';\n\n    if (this.options.position === 'topleft') {\n      L.DomUtil.addClass(this._container, 'leaflet-bookmarks-to-right');\n    }\n    if (this.options.addNewOption) {\n      const addButton = L.DomUtil.create('div', this.options.addBookmarkButtonCss);\n      if (this._addButton === null) {\n        this._listwrapper.parentNode.appendChild(addButton);\n        this._addButton = addButton;\n        this._listwrapper.parentNode\n          .classList.add(this.options.listWrapperClassAdd);\n        addButton.innerHTML = '<span class=\"plus\">+</span>' +\n          '<span class=\"content\">' +\n          this.options.addBookmarkMessage + '</span>';\n        L.DomEvent.on(addButton, 'click', this._onAddButtonPressed, this);\n      }\n    }\n  },\n\n  /**\n   * @param  {MouseEvent} evt\n   */\n  _onAddButtonPressed: function(evt) {\n    L.DomEvent.stop(evt);\n    this.collapse();\n    this._map.fire('bookmark:new', {\n      latlng: this._map.getCenter()\n    });\n  },\n\n  /**\n   * I don't care if they're unique or not,\n   * if you do - handle this\n   *\n   * @param {Array.<Object>} bookmarks\n   * @return {Array.<Object>}\n   */\n  _filterBookmarks: function(bookmarks) {\n    if (this.options.filterBookmarks) {\n      return this.options.filterBookmarks.call(this, bookmarks);\n    }\n    return bookmarks;\n  },\n\n  /**\n   * Filter bookmarks for output. This one allows you to save dividers as well\n   *\n   * @param {Array.<Object>} bookmarks\n   * @return {Array.<Object>}\n   */\n  _filterBookmarksOutput: function(bookmarks) {\n    if (this.options.filterBookmarksOutput) {\n      return this.options.filterBookmarksOutput.call(this, bookmarks);\n    }\n    return bookmarks;\n  },\n\n  /**\n   * Append list items(render)\n   * @param  {Array.<Object>} bookmarks\n   */\n  _appendItems: function(bookmarks) {\n    let html = '';\n    let wasEmpty = this._data.length === 0;\n    let bookmark;\n\n    // maybe you have something in mind?\n    bookmarks = this._filterBookmarks(bookmarks);\n\n    // store\n    this._data = this._data.concat(bookmarks);\n\n    for (let i = 0, len = bookmarks.length; i < len; i++) {\n      html += this._renderBookmarkItem(bookmarks[i]);\n    }\n\n    if (html !== '') {\n      // replace `empty` message if needed\n      if (wasEmpty) {\n        this._list.innerHTML = html;\n      } else {\n        this._list.innerHTML += html;\n      }\n    }\n\n    if (this._isCollapsed) {\n      const container = this._container;\n      const className = this.options.animateClass;\n      container.classList.add(className);\n      window.setTimeout(function() {\n        container.classList.remove(className);\n      }, this.options.animateDuration);\n    } else {\n      this._scrollToLast();\n    }\n  },\n\n  /**\n   * Scrolls to last element of the list\n   */\n  _scrollToLast: function() {\n    const listwrapper = this._listwrapper;\n    let pos = this._listwrapper.scrollTop;\n    const targetVal = this._list.lastChild.offsetTop;\n    let start = 0;\n\n    const step = (targetVal - pos) / (this.options.scrollDuration / (1000 / 16));\n\n    function scroll(timestamp) {\n      if (!start) start = timestamp\n      //var progress = timestamp - start;\n\n      pos = Math.min(pos + step, targetVal);\n      listwrapper.scrollTop = pos;\n      if (pos !== targetVal) {\n        L.Util.requestAnimFrame(scroll);\n      }\n    }\n    L.Util.requestAnimFrame(scroll);\n  },\n\n  /**\n   * Render single bookmark item\n   * @param  {Object} bookmark\n   * @return {String}\n   */\n  _renderBookmarkItem: function(bookmark) {\n    if (bookmark.divider) {\n      return substitute(this.options.dividerTemplate, bookmark);\n    }\n\n    this.options.bookmarkTemplateOptions.data =\n      this._getBookmarkDataForTemplate(bookmark);\n\n    return substitute(\n      this.options.bookmarkTemplate,\n      this.options.bookmarkTemplateOptions\n    );\n  },\n\n  /**\n   * Extracts data and style expressions for item template\n   * @param  {Object} bookmark\n   * @return {Object}\n   */\n  _getBookmarkDataForTemplate: function(bookmark) {\n    if (this.options.getBookmarkDataForTemplate) {\n      return this.options.getBookmarkDataForTemplate.call(this, bookmark);\n    }\n    return {\n      coords: this.formatCoords(bookmark.latlng),\n      name: this.formatName(bookmark.name),\n      zoom: bookmark.zoom,\n      id: bookmark.id\n    };\n  },\n\n  /**\n   * @param  {L.LatLng} latlng\n   * @return {String}\n   */\n  formatCoords: function(latlng) {\n    if (this.options.formatCoords) {\n      return this.options.formatCoords.call(this, latlng);\n    }\n    return latlng[0].toFixed(4) + ',&nbsp;' + latlng[1].toFixed(4);\n  },\n\n  /**\n   * @param  {String} name\n   * @return {String}\n   */\n  formatName: function(name) {\n    if (this.options.formatName) {\n      return this.options.formatName.call(this, name);\n    }\n    return name;\n  },\n\n  /**\n   * Shows bookmarks list\n   */\n  expand: function() {\n    L.DomUtil.addClass(this._container, this.options.expandedClass);\n    this._isCollapsed = false;\n  },\n\n  /**\n   * Hides bookmarks list and the form\n   */\n  collapse: function() {\n    L.DomUtil.removeClass(this._container, this.options.expandedClass);\n    this._isCollapsed = true;\n  },\n\n  /**\n   * @param  {Event} evt\n   */\n  _onClick: function(evt) {\n    const expanded = L.DomUtil.hasClass(this._container, this.options.expandedClass);\n    let target = evt.target || evt.srcElement;\n\n    if (expanded) {\n      if (target === this._container) {\n        return this.collapse();\n      }\n      // check if it's inside the header\n      while (target !== this._container) {\n        if (L.DomUtil.hasClass(target, this.options.headerClass) ||\n          L.DomUtil.hasClass(target, this.options.listWrapperClass)) {\n          this.collapse();\n          break;\n        }\n        target = target.parentNode;\n      }\n    } else this.expand();\n  },\n\n  /**\n   * @param  {Object} evt\n   */\n  _onBookmarkAddStart: function(evt) {\n    if (this._marker) this._popup._close();\n\n    this._marker = new L.Marker(evt.latlng, {\n      icon: this.options.icon || new L.Icon.Default(),\n      draggable: true,\n      riseOnHover: true\n    }).addTo(this._map);\n    this._marker.on('popupclose', this._onPopupClosed, this);\n\n    // open form\n    this._popup = new L.Control.Bookmarks.FormPopup(\n      L.Util.extend(this.options.formPopup, {\n        mode: L.Control.Bookmarks.FormPopup.modes.CREATE\n      }),\n      this._marker,\n      this,\n      L.Util.extend({}, evt.data, this.options.defaultBookmarkOptions)\n    ).addTo(this._map);\n  },\n\n  /**\n   * Bookmark added\n   * @param  {Object} bookmark\n   */\n  _onBookmarkAdd: function(bookmark) {\n    const map = this._map;\n    bookmark = this._cleanBookmark(bookmark.data);\n    this._storage.setItem(bookmark.id, bookmark, (item) => {\n      map.fire('bookmark:saved', {\n        data: item\n      });\n      this._appendItems([item]);\n    });\n    this._showBookmark(bookmark);\n  },\n\n  /**\n   * Update done\n   * @param  {Event} evt\n   */\n  _onBookmarkEdited: function(evt) {\n    const map = this._map;\n    const bookmark = this._cleanBookmark(evt.data);\n    this._storage.setItem(bookmark.id, bookmark, (item) => {\n      map.fire('bookmark:saved', { data: item });\n      const data = this._data;\n      this._data = [];\n      for (var i = 0, len = data.length; i < len; i++) {\n        if (data[i].id === bookmark.id) {\n          data.splice(i, 1, bookmark);\n        }\n      }\n      this._appendItems(data);\n    });\n    this._showBookmark(bookmark);\n  },\n\n  /**\n   * Cleans circular reference for JSON\n   * @param  {Object} bookmark\n   * @return {Object}\n   */\n  _cleanBookmark: function(bookmark) {\n    if (!L.Util.isArray(bookmark.latlng)) {\n      bookmark.latlng = [bookmark.latlng.lat, bookmark.latlng.lng];\n    }\n    return bookmark;\n  },\n\n  /**\n   * Form closed\n   * @param  {Object} evt\n   */\n  _onPopupClosed: function(evt) {\n    this._map.removeLayer(this._marker);\n    this._marker = null;\n    this._popup = null;\n  },\n\n  /**\n   * @param  {String} id\n   * @return {Object|Null}\n   */\n  _getBookmark: function(id) {\n    for (let i = 0, len = this._data.length; i < len; i++) {\n      if (this._data[i].id === id) return this._data[i];\n    }\n    return null;\n  },\n\n  /**\n   * @param  {Object} evt\n   */\n  _onBookmarkShow: function(evt) {\n    this._gotoBookmark(evt.data);\n  },\n\n  /**\n   * Event handler for edit\n   * @param  {Object} evt\n   */\n  _onBookmarkEdit: function(evt) {\n    this._editBookmark(evt.data);\n  },\n\n  /**\n   * Remove bookmark triggered\n   * @param  {Event} evt\n   */\n  _onBookmarkRemove: function(evt) {\n    this._removeBookmark(evt.data);\n  },\n\n  /**\n   * Bookmark options called\n   * @param  {Event} evt\n   */\n  _onBookmarkOptions: function(evt) {\n    this._bookmarkOptions(evt.data);\n  },\n\n  /**\n   * Show menu popup\n   * @param  {Object} bookmark\n   */\n  _bookmarkOptions: function(bookmark) {\n    const coords = L.latLng(bookmark.latlng);\n    const marker = this._marker = this._createMarker(coords, bookmark);\n    // open form\n    this._popup = new L.Control.Bookmarks.FormPopup(\n      L.Util.extend(this.options.formPopup, {\n        mode: L.Control.Bookmarks.FormPopup.modes.OPTIONS\n      }),\n      marker,\n      this,\n      bookmark\n    ).addTo(this._map);\n  },\n\n  /**\n   * Call edit popup\n   * @param  {Object} bookmark\n   */\n  _editBookmark: function(bookmark) {\n    const coords = L.latLng(bookmark.latlng);\n    const marker = this._marker = this._createMarker(coords, bookmark);\n    marker.dragging.enable();\n    // open form\n    this._popup = new L.Control.Bookmarks.FormPopup(\n      L.Util.extend(this.options.formPopup, {\n        mode: L.Control.Bookmarks.FormPopup.modes.UPDATE\n      }),\n      marker,\n      this,\n      bookmark\n    ).addTo(this._map);\n  },\n\n  /**\n   * Returns a handler that will remove the bookmark from map\n   * in case it got removed from the list\n   * @param  {Object}   bookmark\n   * @param  {L.Marker} marker\n   * @return {Function}\n   */\n  _getOnRemoveHandler: function(bookmark, marker) {\n    return function (evt) {\n      if (evt.data.id === bookmark.id) {\n        marker.clearAllEventListeners();\n        if (marker._popup_) marker._popup_._close();\n        this.removeLayer(marker);\n      }\n    };\n  },\n\n  /**\n   * Creates bookmark marker\n   * @param  {L.LatLng} coords\n   * @param  {Object}   bookmark\n   * @return {L.Marker}\n   */\n  _createMarker: function(coords, bookmark) {\n    const marker = new L.Marker(coords, {\n      icon: this.options.icon || new L.Icon.Default(),\n      riseOnHover: true\n    }).addTo(this._map);\n    const removeIfRemoved = this._getOnRemoveHandler(bookmark, marker);\n    this._map.on('bookmark:removed', removeIfRemoved, this._map);\n    marker\n      .on('popupclose', () => this._map.removeLayer(this))\n      .on('remove', () => this._map.off('bookmark:removed', removeIfRemoved));\n    return marker;\n  },\n\n  /**\n   * Shows bookmark, nothing else\n   * @param  {Object} bookmark\n   */\n  _showBookmark: function(bookmark) {\n    if (this._marker) this._marker._popup_._close();\n    const coords = L.latLng(bookmark.latlng);\n    const marker = this._createMarker(coords, bookmark);\n    const popup = new L.Control.Bookmarks.FormPopup(\n      L.Util.extend(this.options.formPopup, {\n        mode: L.Control.Bookmarks.FormPopup.modes.SHOW\n      }),\n      marker,\n      this,\n      bookmark\n    );\n    if (this.options.popupOnShow) popup.addTo(this._map);\n    this._popup = popup;\n    this._marker = marker;\n  },\n\n  /**\n   * @param  {Object} bookmark\n   */\n  _gotoBookmark: function(bookmark) {\n    this._map.setView(bookmark.latlng, bookmark.zoom);\n    this._showBookmark(bookmark);\n  },\n\n  /**\n   * @param  {Object} bookmark\n   */\n  _removeBookmark: function(bookmark) {\n    const remove = (proceed) => {\n      if (!proceed) return this._showBookmark(bookmark);\n\n      this._data.splice(this._data.indexOf(bookmark), 1);\n      this._storage.removeItem(bookmark.id, (bookmark) => {\n        this._onBookmarkRemoved(bookmark);\n      });\n    };\n\n    if (typeof this.options.onRemove === 'function') {\n      this.options.onRemove(bookmark, remove);\n    } else {\n      remove(true);\n    }\n  },\n\n  /**\n   * @param  {Object} bookmark\n   */\n  _onBookmarkRemoved: function(bookmark) {\n    const li = this._list.querySelector('.' +\n        this.options.bookmarkTemplateOptions.itemClass +\n        \"[data-id='\" + bookmark.id + \"']\");\n\n    this._map.fire('bookmark:removed', { data: bookmark });\n\n    if (li) {\n      L.DomUtil.setOpacity(li, 0);\n      setTimeout(() => {\n        if (li.parentNode) li.parentNode.removeChild(li);\n        if (this._data.length === 0) this._setEmptyListContent();\n      }, 250);\n    }\n  },\n\n  /**\n   * Gets popup content\n   * @param  {Object} bookmark\n   * @return {String}\n   */\n  _getPopupContent: function(bookmark) {\n    if (this.options.getPopupContent) {\n      return this.options.getPopupContent.call(this, bookmark);\n    }\n    return JSON.stringify(bookmark);\n  },\n\n  /**\n   * @param  {Event} e\n   */\n  _onBookmarkClick: function(evt) {\n    const bookmark = this._getBookmarkFromListItem(evt.delegateTarget);\n    if (!bookmark) return;\n    L.DomEvent.stopPropagation(evt);\n\n    // remove button hit\n    if (L.DomUtil.hasClass(evt.target || evt.srcElement,\n        this.options.bookmarkTemplateOptions.removeClass)) {\n      this._removeBookmark(bookmark);\n    } else {\n      this._map.fire('bookmark:show', { data: bookmark });\n      if (this.options.collapseOnClick) this.collapse();\n    }\n  },\n\n  /**\n   * In case you've decided to play with ids - we've got you covered\n   * @param  {Element} li\n   * @return {Object|Null}\n   */\n  _getBookmarkFromListItem: function(li) {\n    if (this.options.getBookmarkFromListItem) {\n      return this.options.getBookmarkFromListItem.call(this, li);\n    }\n    return this._getBookmark(li.getAttribute('data-id'));\n  },\n\n  /**\n   * GeoJSON feature out of a bookmark\n   * @param  {Object} bookmark\n   * @return {Object}\n   */\n  bookmarkToFeature: function(bookmark) {\n    const coords = this._getBookmarkCoords(bookmark);\n    bookmark = JSON.parse(JSON.stringify(bookmark)); // quick copy\n    delete bookmark.latlng;\n\n    return L.GeoJSON.getFeature({\n      feature: {\n        type: 'Feature',\n        id: bookmark.id,\n        properties: bookmark\n      }\n    }, {\n      type: 'Point',\n      coordinates: coords\n    });\n  },\n\n  /**\n   * @param  {Object} bookmark\n   * @return {Array.<Number>}\n   */\n  _getBookmarkCoords: function(bookmark) {\n    if (bookmark.latlng instanceof L.LatLng) {\n      return [bookmark.latlng.lat, bookmark.latlng.lng];\n    }\n    return bookmark.latlng.reverse();\n  },\n\n  /**\n   * Read bookmarks from GeoJSON FeatureCollectio\n   * @param  {Object} geojson\n   * @return {Object}\n   */\n  fromGeoJSON: function(geojson) {\n    const bookmarks = [];\n    for (let i = 0, len = geojson.features.length; i < len; i++) {\n      const bookmark = geojson.features[i];\n      if (!bookmark.properties.divider) {\n        bookmark.properties.latlng = bookmark.geometry\n          .coordinates.concat().reverse();\n      }\n      bookmarks.push(bookmark.properties);\n    }\n    return bookmarks;\n  },\n\n  /**\n   * @return {Object}\n   */\n  toGeoJSON: function() {\n    return {\n      type: 'FeatureCollection',\n      features: ((data) => {\n        const result = [];\n        for (let i = 0, len = data.length; i < len; i++) {\n          if (!data[i].divider) {\n            result.push(this.bookmarkToFeature(data[i]));\n          }\n        }\n        return result;\n      })(this._data)\n    };\n  }\n});\n","import L from 'leaflet';\nimport Bookmarks from './src/bookmarks';\n\nL.Control.Bookmarks = Bookmarks;\n\nexport default Bookmarks;\n"],"names":["substitute","str","object","regexp","replace","match","name","trim","indexOf","charAt","slice","let","result","i","len","split","length","const","alpha","unique","prefix","Math","floor","random","Date","getTime","toString","data","GlobalStorage","this","_prefix","getItem","key","callback","setItem","item","getAllItems","items","hasOwnProperty","this_prefix","push","removeItem","JSON_RE","LocalStorage","_storage","window","localStorage","test","JSON","parse","prefixLength","substring","self","itemStr","stringify","EngineType","Storage","engineType","_name","_engine","createEngine","Array","prototype","call","arguments","type","args","ElementPrototype","matches","modes","CREATE","UPDATE","SHOW","OPTIONS","L","Popup","extend","statics","options","mode","className","templateOptions","formClass","inputClass","inputErrorClass","idInputClass","coordsClass","submitClass","inputPlaceholder","removeClass","editClass","cancelClass","editableClass","removableClass","menuItemClass","editMenuText","removeMenuText","cancelMenuText","submitTextCreate","submitTextEdit","generateNames","minWidth","generateNamesPrefix","template","menuTemplate","initialize","source","control","bookmark","offset","_calculateOffset","_bookmark","_control","_latlng","getLatLng","_popup_","_initLayout","editable","removable","menuButton","_menuButton","DomUtil","create","_container","insertBefore","_closeButton","href","innerHTML","DomEvent","disableClickPropagation","on","_onMenuButtonClick","_showMenu","_map","fire","evt","preventDefault","_close","anchor","point","icon","popupAnchor","add","_updateContent","content","_getPopupContent","submitText","modeClass","Util","coords","formatCoords","_source","getZoom","join","_content","_onRendered","form","_contentNode","querySelector","_onSubmit","setTimeout","_setFocus","bind","delegate","_onEditClick","_onRemoveClick","_onCancelClick","input","strLength","value","focus","setSelectionRange","_getBookmarkData","getBookmarkData","idInput","latlng","zoom","id","stop","classList","remove","validate","validateInput","map","lat","toFixed","lng","onAdd","_onSourceMoved","_onSourceMoveStart","onRemove","off","style","display","e","openPopup","update","matchesSelector","Element","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","selector","nodes","parentNode","document","querySelectorAll","element","el","fn","target","srcElement","delegateTarget","checkSelf","root","closest","propagationStopped","_template","Control","FormPopup","storage","position","containerClass","expandedClass","headerClass","listClass","iconClass","iconWrapperClass","listWrapperClass","listWrapperClassAdd","wrapperClass","addBookmarkButtonCss","animateClass","animateDuration","formPopup","popupClass","bookmarkTemplate","emptyTemplate","dividerTemplate","bookmarkTemplateOptions","itemClass","nameClass","emptyClass","defaultBookmarkOptions","title","emptyMessage","addBookmarkMessage","collapseOnClick","scrollOnAdd","scrollDuration","popupOnShow","addNewOption","popupTemplate","getPopupContent","_data","_list","_marker","_addButton","_icon","_isCollapsed","setOptions","container","disableScrollPropagation","_createList","bookmarks","appendChild","_listwrapper","_onClick","stopPropagation","_onBookmarkAddStart","_onBookmarkAdd","_onBookmarkEdited","_onBookmarkShow","_onBookmarkEdit","_onBookmarkOptions","_onBookmarkRemove","_onAddButtonPressed","_popup","getData","_filterBookmarksOutput","_onBookmarkClick","_setEmptyListContent","isArray","_appendItems","size","getSize","maxHeight","min","y","addClass","addButton","collapse","getCenter","_filterBookmarks","filterBookmarks","filterBookmarksOutput","html","wasEmpty","concat","_renderBookmarkItem","_scrollToLast","listwrapper","pos","scrollTop","targetVal","lastChild","offsetTop","step","requestAnimFrame","scroll","timestamp","divider","_getBookmarkDataForTemplate","getBookmarkDataForTemplate","formatName","expand","expanded","hasClass","Marker","Icon","Default","draggable","riseOnHover","addTo","_onPopupClosed","Bookmarks","_cleanBookmark","_showBookmark","splice","removeLayer","_getBookmark","_gotoBookmark","_editBookmark","_removeBookmark","_bookmarkOptions","latLng","marker","_createMarker","dragging","enable","_getOnRemoveHandler","clearAllEventListeners","removeIfRemoved","popup","setView","proceed","_onBookmarkRemoved","li","setOpacity","removeChild","_getBookmarkFromListItem","getBookmarkFromListItem","getAttribute","bookmarkToFeature","_getBookmarkCoords","GeoJSON","getFeature","feature","properties","coordinates","LatLng","reverse","fromGeoJSON","geojson","features","geometry","toGeoJSON"],"mappings":"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"}